name: Production Build and Deploy

on:
  push: 
    branches: [ "dev" ] 
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "dev" ]
  pull_request_target:
    branches: [ "dev" ]
  workflow_dispatch:

permissions:
  contents: read

env:
  REGISTRY: registry.cn-hangzhou.aliyuncs.com
  IMAGE_NAME: limit-dancer/aspnetcorewebapi
  IMAGE_TAG: latest


jobs:
  build:

    runs-on: ubuntu-latest
    environment: development
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3 

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Login to ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
            registry: ${{ env.REGISTRY }}
            username: ${{ secrets.ALIYUN_REGISTRY_USERNAME }} 
            password: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }} 

      - name: Build the Docker image
        run: |
          docker version
          docker login --username=${{ secrets.ALIYUN_REGISTRY_USERNAME }} --password=${{ secrets.ALIYUN_REGISTRY_PASSWORD }} ${{ env.REGISTRY }}
          docker build . --file ./src/AspNetCore.WebApi/Dockerfile --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{env.IMAGE_TAG}} --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.run_number }}
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{env.IMAGE_TAG}}
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.run_number }}

      - name: Docker Images Lst 
        run: docker images


  deploy: 
    runs-on: ubuntu-latest
    environment: development
    permissions:
       contents: none
    needs: build
    steps:
      - name: Executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
            host: ${{ secrets.ALIYUN_SERVER_HOST }}
            username: ${{ secrets.ALIYUN_SERVER_USERNAME }}
            password: ${{ secrets.ALIYUN_SERVER_PASSWORD }}
            port: ${{ secrets.ALIYUN_SERVER_PORT }}
            script: 
                cd /root/github/DotNet;
                docker version;
                docker login --username=${{ secrets.ALIYUN_REGISTRY_USERNAME }} --password=${{ secrets.ALIYUN_REGISTRY_PASSWORD }} ${{ env.REGISTRY }};
                docker-compose pull && docker-compose  up -d;
                docker images|grep none|awk '{print $3}'|xargs docker rmi;
